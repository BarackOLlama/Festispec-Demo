<Window x:Class="Festispec.Views.QuestionnaireCreate"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:Festispec"
        mc:Ignorable="d"
        x:Name="QuestionnaireCreateName"
        ResizeMode="NoResize"
        Title="Vragenlijst aanmaken/aanpassen" Height="450.4" Width="800"
        DataContext="{Binding QuestionnaireCreate, Source={StaticResource Locator}}">
    <Window.Resources>
        <local:NullToVisibleConverter x:Key="NullToVisible"/>
        <ControlTemplate x:Key="SmallButtonTemplate" TargetType="Button">
            <Button FontSize="12" Margin="5,0"
                    Content="{TemplateBinding Content}"
                    Command="{TemplateBinding Command}"
                    CommandParameter="{TemplateBinding CommandParameter}"/>
        </ControlTemplate>
    </Window.Resources>
    <StackPanel Background="DarkSeaGreen">
        <StackPanel Orientation="Horizontal" Margin="50,20,50,0">
            <TextBlock TextAlignment="Center" FontSize="20" Text="Inspectie" Margin="20,0"/>
            <TextBox Background="AntiqueWhite" Width="183" HorizontalAlignment="Left" Height="26"  Margin="20,0"
                     Text="{Binding Questionnaire.InspectionId, Mode=TwoWay}"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Margin="50,10,50,0">
            <TextBlock TextAlignment="Center" FontSize="20" Text="Naam" Margin="20,0"/>
            <TextBox Background="AntiqueWhite" Width="183" HorizontalAlignment="Left" Height="26"  Margin="20,0"
                     Text="{Binding QuestionnaireName, Mode=TwoWay}"/>
        </StackPanel>

        <StackPanel Orientation="Vertical" Width="700" Margin="50,10" HorizontalAlignment="Center">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,5" >
                <TextBox Name="NewQuestionName" Background="AntiqueWhite" FontSize="12" Margin="5,0" Height="26" Width="550" HorizontalAlignment="Left"
                         Text="{Binding NewQuestionText, Mode=TwoWay}"/>
                <Button Content="Nieuwe vraag toevoegen" Template="{StaticResource SmallButtonTemplate}"
                        Command="{Binding AddQuestionCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text.Length, ElementName=NewQuestionName, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Width="680">
                <TextBlock Text="Type" TextAlignment="Center" FontSize="20" Margin="0,0,20,0"/>
                <ComboBox Height="26" Width="150"
                          ItemsSource="{Binding QuestionTypes}"
                          DisplayMemberPath="Name"
                          SelectedIndex="0"
                          SelectedItem="{Binding SelectedType, Mode=TwoWay}"/>
            </StackPanel>
        </StackPanel>

        <StackPanel>
            <DataGrid AutoGenerateColumns="False" IsReadOnly="True" RenderTransformOrigin="5.75,12.538" Canvas.Left="37" Canvas.Top="71" MinHeight="50" MaxHeight="150" Width="680"
                      ItemsSource ="{Binding Questionnaire.QuestionList}"
                      SelectedItem="{Binding SelectedQuestion, Mode=TwoWay}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Vraag" Binding="{Binding Content}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Type" Binding="{Binding Category}"></DataGridTextColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Delete" Command="{Binding Path=DataContext.DeleteRowCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}"
                                    CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <DataGrid.CellStyle>
                    <!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger  Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.SelectedIndex>0</DataGrid.SelectedIndex>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding GetAnswersCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding GetAnswersCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </DataGrid>
        </StackPanel>

        <StackPanel Visibility="{Binding SelectedQuestion, Converter={StaticResource NullToVisible}}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,5">
                <TextBox Name="NewAnswer" Background="AntiqueWhite" FontSize="12" Margin="5,0" Height="26" Width="550" HorizontalAlignment="Left"
                         Text="{Binding NewAnswerText, Mode=TwoWay}"/>
                <Button Content="Nieuw antwoord toevoegen" Template="{StaticResource SmallButtonTemplate}"
                        Command="{Binding AddAnswerCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text.Length, ElementName=NewAnswer, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            <DataGrid ItemsSource="{Binding Answers, Mode=TwoWay}" AutoGenerateColumns="False" MinHeight="50" MaxHeight="150" Width="680">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Optie" Binding="{Binding Content}"></DataGridTextColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Delete" Command="{Binding Path=DataContext.DeleteRowCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}"
                                    CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <DataGrid.CellStyle>
                    <!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger  Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
            </DataGrid>
        </StackPanel>

        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" Orientation="Horizontal"  Margin="20,10">
            <TextBlock Foreground="Red" Text="{Binding WarningText}"/>
            <Button Name="SaveChanges" Content="Save changes" Template="{StaticResource SmallButtonTemplate}"
                    Command="{Binding SaveChangesCommand}"
                    CommandParameter="{Binding ElementName=QuestionnaireCreateName}">
            </Button>
            <Button Name="DiscardChanges" Content="Discard changes" Template="{StaticResource SmallButtonTemplate}"
                    Command="{Binding DiscardChangesCommand}"
                    CommandParameter="{Binding ElementName=QuestionnaireCreateName}"/>
        </StackPanel>
    </StackPanel>

</Window>